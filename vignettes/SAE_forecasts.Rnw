\SweaveOpts{prefix.string=figs/eda}
<<prep, echo=FALSE, results=hide>>=
library(rstan)
source("../R_script/get_mene.R")
source("../R/sanitize_mene.R")
mene.df <- mene_factors(mene.df)
mene.df <- mene_code_q1(mene.df)
mene.df <- mene_code_q17(mene.df)
source("../R_script/get_sam.R")
source("../R/mene_to_stan.R")
source("../R/sam_to_stan.R")
mene.df <- create_la_index(mene.df)
sam.df <- match_sam(sam.df)
mene.df$marstat[mene.df$marstat == "NA"] <- NA
mene.df$marstat <- droplevels(mene.df$marstat)
mene.df$marstat <- relevel(mene.df$marstat, ref="Single")
mene.df$child_in_hh <- relevel(mene.df$child_in_hh, ref="None")
mene.df$car <- as.factor(as.character(mene.df$car, exclude=NA))
sam.df$marstat <- relevel(sam.df$marstat, ref="Single")
sam.df$child_in_hh <- relevel(sam.df$child_in_hh, ref="None")
sam.df$child_in_hh <- droplevels(sam.df$child_in_hh)
sam.df$marstat <- droplevels(sam.df$marstat)
@
 
<<<>>=

stan_data <- format_hierarchical_forecast(mene.df$q1_binary, mene.df,
"~ age + sex + age:sex + car + seg + marstat + ethnicity_5 + child_in_hh + adults_in_hh", sam.df)
m <- stan_model(file = '../stan/simple_hierarchical_bernoulli_glm_forecast.stan')
f <- optimizing(m, data = stan_data, hessian = TRUE)

@